C51 COMPILER V9.60.0.0   DS18                                                              08/29/2022 15:02:36 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DS18
OBJECT MODULE PLACED IN .\Objects\ds18.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ds18.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ds18
                    -.lst) TABS(2) OBJECT(.\Objects\ds18.obj)

line level    source

   1          #include "define.h"
   2          
   3          
   4          void reset()//复位函数
   5          {
   6   1        DS = 0; 
   7   1        delay10us(70);  //拉低700us
   8   1        DS = 1; //DQ=1
   9   1        delay10us(2); //20US
  10   1      }
  11          
  12          u8 check()  //检查ds18b20存在
  13          {
  14   1        u8 time=0;
  15   1      
  16   1        while(DS&&time<20)  //等待DQ为低电平
  17   1        {
  18   2          time++;
  19   2          delay10us(1); 
  20   2        }
  21   1        if(time>=20)return 1; //如果超时则强制返回1
  22   1        else time=0;
  23   1        while((!DS)&&time<20) //等待DQ为高电平
  24   1        {
  25   2          time++;
  26   2          delay10us(1);
  27   2        }
  28   1        if(time>=20)return 1; //如果超时则强制返回1
  29   1        return 0;
  30   1      }
  31          
  32          u8 readBit()            //读一位
  33          {
  34   1        u8 dat=0;
  35   1        
  36   1        DS = 0;
  37   1        _nop_();_nop_();
  38   1        DS = 1; 
  39   1        _nop_();_nop_(); 
  40   1        if(DS)dat=1;  //如果总线上为1则数据dat为1，否则为0
  41   1        else dat=0;
  42   1        delay10us(5);
  43   1        return dat;
  44   1      } 
  45          
  46          u8 readByte()     //读字节
  47          {
  48   1        u8 i=0;
  49   1        u8 dat=0;
  50   1        u8 temp=0;
  51   1      
  52   1        for(i=0;i<8;i++)//循环8次，每次读取一位，且先读低位再读高位
  53   1        {
  54   2          temp=readBit();
C51 COMPILER V9.60.0.0   DS18                                                              08/29/2022 15:02:36 PAGE 2   

  55   2          dat=(temp<<7)|(dat>>1);
  56   2        }
  57   1        return dat; 
  58   1      }
  59          
  60          void writeBit(u8 temp){     //写比特
  61   1        if(temp)
  62   1          {
  63   2            DS = 0;
  64   2            _nop_();_nop_();
  65   2            DS = 1; 
  66   2            delay10us(6);
  67   2          }
  68   1          else
  69   1          {
  70   2            DS = 0;
  71   2            delay10us(6);
  72   2            DS = 1;
  73   2            _nop_();_nop_();  
  74   2          }
  75   1      }
  76          
  77          void writeByte(u8 dat)      //写字节
  78          {
  79   1        u8 i=0;
  80   1        u8 temp=0;
  81   1      
  82   1        for(i=0;i<8;i++)//循环8次，每次写一位，且先写低位再写高位
  83   1        {
  84   2          temp=dat&0x01;//选择低位准备写入
  85   2          dat>>=1;//将次高位移到低位
  86   2          writeBit(temp);
  87   2        } 
  88   1      }
  89          
  90          void startds() //启动ds18b20
  91          {
  92   1          reset();
  93   1          check();
  94   1          writeByte(0xcc);
  95   1          writeByte(0x44);
  96   1      }
  97          
  98          u8 initds()     //初始化
  99          {
 100   1        reset();
 101   1        return check(); 
 102   1      }
 103          
 104          float readTem() //读取温度
 105          {
 106   1        float temp;
 107   1        u8 dath=0;
 108   1        u8 datl=0;
 109   1        u16 value=0;
 110   1      
 111   1          startds();//开始转换
 112   1          reset();//复位
 113   1          check();
 114   1          writeByte(0xcc);//SKIP ROM
 115   1          writeByte(0xbe);//读存储器
 116   1      
C51 COMPILER V9.60.0.0   DS18                                                              08/29/2022 15:02:36 PAGE 3   

 117   1        datl=readByte();//低字节
 118   1        dath=readByte();//高字节
 119   1        value=(dath<<8)+datl;
 120   1      
 121   1        if((value&0xf800)==0xf800)//判断符号位
 122   1        {
 123   2          value=(~value)+1; //数据取反再加1
 124   2          temp=value*(-0.0625);//乘以精度 
 125   2        }
 126   1        else 
 127   1        {
 128   2          temp=value*0.0625;  
 129   2        }
 130   1        return temp;
 131   1      }
 132          
 133          
 134          
 135          
 136          
 137          
 138          
 139          
 140          
 141          
 142          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    398    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
